09/28/2020
Topics: Operator Precedence
		Primitive Castings
		Unary Operators

package name: day07_UnaryOperators

Warm Up tasks:
	1. create a class called LeapYear, and write a program that can identify if the given is Leap Year, print true if it's leap year, otherwise print false
		Ex:
				year = 2020

			output:
				2020 is leap year: true


				year = 2021

			output:
				2021 is leap year: false

				>, <

				2020 % 4  < 1

		Hint: if the number of year can be evenly divisible by 4, it's known as leap year

	2. Divisibility, write a program that can check if a number is evenly divisible by 2, 3, 5
			Ex:
				number = 65;

			output:
				65 is divisible by 2: false
				65 is divisible by 3: false
				65 is divisible by 5: true


				number = 80;

			output:
				80 is divisible by 2: true
				80 is divisible by 3: false
				80 is divisible by 5: true


		Hint: if the remainder < 1 (means 0) ==> evenly divisible

		> , <

		65 % 2 < 1 ==> 65 evenly divisible by 2
		65 % 3 < 1 ==> 65 evenly divisible by 3
		65 % 5 < 1 ==> 65 evenly divisible by 5


Operator Precedence: +, -, *, /, %

		highest: *, /, %
		Lowest: +, -


		3 + 2 + 3

		3 + 1 * 2 = 5

		3 * 3 / 3
		  9  / 3 = 3


		  3 % 1 * 2 / 3  ==> FCFS
		    0 * 2 / 3
		      0 / 3 = 0


Primitive Castings: converting one primitive type to another

		double > float > long > int > short > byte

		larger primitive type cannot be directly assigned to the smaller type

		1. implicit casting: casting smaller type to larger type. done automatically

				int a= 300;
				double b = a;

		2. explicit casting: casting larger type to smaller type. MUST be done manually

				double a = 200.5;
				int b =  (int)a;

				CANNOT CHANGE the limit of the data type


Unary Operators:
		-: negative, < 0
		+: positive (implicit), > 0

		--: decrement, decreases value by1
			pre: -- is before the variable
			post: -- is after the variable

		++: increment, increase the value by1
			pre: ++ is before the variable
			post: ++ is after the variable


two types of increment/decrement:

			pre increment/decrement:  increase/decrease the value by 1 immediately
					int a = 100;
						++a;  // 101

					int b = 100;
						-- b; // 99

			post increment/decrement: first passes the current value, then increases/decreases the value by 1
					int a =100;
						a--;  // 100
						a; //99

					int b = 100;
						b++; // 100
						b; //101


Operators:  +, -, *, / , %, -, +, --, ++


	=, +=, -=, *=, /=, %=
	>=, <=, >, <, ==, !=, ||, &&, !

	come back at: 3:32 pm







